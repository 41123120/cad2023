<h1>About</h1>
<p></p>
<h2>倉儲網站</h2>
<p><a href="https://github.com/41123120/cad2023">https://github.com/41123120/cad2023</a></p>
<p><a href="/get_page/About">s1511</a></p>
<h1>專案二</h1>
<p><a href="/downloads/1222.mp4"></a></p>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/1222.mp4" type="video/mp4"/></video></p>
<p>軌道繪製過程</p>
<p></p>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/1229.mp4" type="video/mp4"/></video></p>
<p>軌道模擬丟進CoppeliaSim運作</p>
<h1>任務一</h1>
<p><a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/41123120_nfu_edu_tw/EhnfmgUZuvtOlQ8Cxk9mBjoBmlj6pvmiISVxj6qY7rOc7A?e=Sons3Q">零組件圖檔</a></p>
<h1>課程總結</h1>
<p>(✘)A: 是否按照進度明確標示倉儲的改版歷程</p>
<p>(✔)B: 是否根據 IPv4 與 IPv6 網路環境設定進行作法討論</p>
<p>(✔)C: 是否就 Replit、s.cycu.org 與 localhost 情境下對個人與分組倉儲進行設定操作</p>
<p>(✔)D: 是否就所分配的 CAD 套件從安裝設定到繪圖提供內容參考</p>
<p>(✔)E: 是否使用所分配的 CAD 套件完成專案一零組件繪圖, 並提供零組件下載</p>
<p>(✔)F: 是否將自行繪製的專案一零組件轉入 CoppeliaSim</p>
<p>(✘)G: 是否利用 ZMQ Remote API Python 對專案一轉入的零組件設定感測器, 並進行鋼球永動模擬</p>
<p>(✘)H: 是否實際操作 Triangle 軌道系統的鋼球永動模擬</p>
<p>(✔)I: 是否完成 W15 的平面雙 U 迴路上的鋼球永動系統繪圖、轉檔與系統模擬</p>
<p>(✔)J: 是否使用所分配的 CAD 套件完成專案二 1D 平台零組件繪圖, 並提供零組件下載</p>
<p>(✘)K: 是否利用 ZMQ Remote API Python 對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬</p>
<p>(✘)L: 是否針對專案二的 1D 平台鋼球平衡系統所需的 PID 控制理論進行資料收集與 ChatGPT 對答</p>
<h1>座位排序</h1>
<p><span>輸入:利用 Python 讀取下列檔案名稱為 2a_w12_seat.txt "2b stud num    seat ...</span></p>
<p><span>回覆結果:</span></p>
<p><span>你可以使用 Python 中的檔案讀取功能，來讀取這個檔案並處理其中的資料。以下是一個簡單的範例程式碼，可以讀取檔案並將資料列印出來：</span></p>
<p><img alt="" height="311" src="/images/螢幕擷取畫面 2024-01-06 154706.png" width="553"/></p>
<p><span>輸入:假如前面程式中的座位號第一個 index 代表"列"而第二個 index 代表行, 請延續上個程式, 由左到右作為每一列的順序, 而且希望陣列排序是列出該位置上的學員學號</span></p>
<p><span>回覆結果:</span></p>
<p><span>若希望按照座位順序列出學號，可以對讀取的資料進行整理和排序。以下是修改後的程式碼:</span></p>
<p><span><img alt="" height="240" src="/images/螢幕擷取畫面 2024-01-06 154843.png" width="427"/></span></p>
<p><span>輸入:假如 "2a_w12_seat.txt" 可以從 "https://mde.tw/cadnote/downloads/2a_w12_seat.txt" 這個網址讀取, 而且希望將上一個 Python 程式改用 Brython 編寫, 要如何修改?</span></p>
<p><span>回覆結果:</span></p>
<p>Brython 是一個將 Python 程式碼轉換為 JavaScript 的工具，允許在瀏覽器中執行 Python 程式碼。你可以使用 Brython 來在網頁上執行 Python 程式碼。以下是修改後的 Brython 程式碼，它可以讀取指定網址的檔案並按照指定要求處理：</p>
<p>首先，確保你的網頁中引入了 Brython 的相關腳本，例如：</p>
<p><img alt="" height="242" src="/images/螢幕擷取畫面 2024-01-06 154944.png" width="431"/></p>
<p><span>接著，將上述 Python 程式碼轉換為 Brython 格式。以下是修改後的 Brython 程式碼：</span></p>
<p><span><img alt="" height="245" src="/images/螢幕擷取畫面 2024-01-06 154953.png" width="435"/></span></p>
<p><span><img alt="" height="248" src="/images/螢幕擷取畫面 2024-01-06 155007.png" width="440"/></span></p>
<p><span>這個範例使用了 Brython 和 requests 模組，並在網頁載入時執行 <code>runBrythonScript</code><span> 函數。注意，在瀏覽器環境中使用 Python 腳本需要特殊的轉換，Brython 正是為此而生。</span></span></p>
<div class="w-full text-token-text-primary" data-testid="conversation-turn-8">
<div class="px-4 py-2 justify-center text-base md:gap-6 m-auto">
<div class="flex flex-1 text-base mx-auto gap-3 md:px-5 lg:px-1 xl:px-5 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group">
<div class="relative flex w-full flex-col lg:w-[calc(100%-115px)]">
<div class="flex-col gap-1 md:gap-3">
<div class="flex flex-grow flex-col max-w-full">
<div class="min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto" data-message-author-role="user" data-message-id="aaa2d604-a8de-4873-a460-42d57db9b2f2">
<div class="">輸入:假如我們已經知道 Brython 可以利用 open(https://mde.tw/cadnote/downloads/2a_w12_seat.txt).read() 或 open(https://mde.tw/cadnote/downloads/2a_w12_seat.txt).readlines() 讀取到檔案, 可以將上一個程式全部改用 Brython 完成嗎?</div>
<div class=""></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="w-full text-token-text-primary" data-testid="conversation-turn-9">
<div class="px-4 py-2 justify-center text-base md:gap-6 m-auto">
<div class="flex flex-1 text-base mx-auto gap-3 md:px-5 lg:px-1 xl:px-5 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group final-completion">
<div class="flex-shrink-0 flex flex-col relative items-end">
<div>
<div class="pt-0.5">
<div class="gizmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full">
<div class="relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center"><span>回覆結果:</span></div>
<div class="relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center">
<p>是的，如果你已經知道 Brython 可以使用 <code>open(url).read()</code> 或 <code>open(url).readlines()</code> 來讀取檔案，你可以將上一個程式碼全部改用 Brython 來完成。以下是修改後的 Brython 程式碼：</p>
<p><img alt="" height="247" src="/images/螢幕擷取畫面 2024-01-06 155134.png" width="439"/></p>
<p><span>這個範例使用了 Brython 和 requests 模組，並在網頁載入時執行 </span><code>runBrythonScript</code><span> 函數。注意，在瀏覽器環境中使用 Python 腳本需要特殊的轉換，Brython 正是為此而生。</span></p>
<p></p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p><span></span></p><h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2">
<h1>檔案</h1>
<!-- editor2 結束 -->
<p><a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/41123120_nfu_edu_tw/EhnfmgUZuvtOlQ8Cxk9mBjoBmlj6pvmiISVxj6qY7rOc7A?e=bucU8z">檔案</a></p>
<hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
</div>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/1222.mp4" type="video/mp4"/></video></p>